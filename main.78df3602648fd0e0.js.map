{"version":3,"file":"main.78df3602648fd0e0.js","mappings":";;;;;;;;;;;;;;;;AAC6D;AACxB;AAG9B,MAAM,qBAAqB;IAYhC,YAAmB,UAAoB;QAApB,eAAU,GAAV,UAAU,CAAU;QAXhC,oBAAe,GAAG,IAAI,iDAAe,CAAM,EAAE,CAAC,CAAC;QAC9C,mBAAc,GAAG,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;QACrD,uBAAkB,GAAG,IAAI,iDAAe,CAAS,CAAC,CAAC,CAAC;QACpD,wBAAmB,GAAG,IAAI,iDAAe,CAAkB,IAAI,CAAC,CAAC;QAIlE,aAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAC9C,qBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAC1D,kBAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;IAErB,CAAC;IAE3C,OAAO,CAAC,gBAAkC;QACxC,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;IAC7C,CAAC;IAED,UAAU,CAAC,gBAAkC;QAC3C,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;IACtC,CAAC;IAED,IAAI,CAAC,GAAG,IAAW;QACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE/B,0CAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC;aAC3B,IAAI,CAAC,mDAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;aACtB,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;;YAClB,IAAI,CAAC,UAAU,CAAC,WAAI,CAAC,IAAI,0CAAE,OAAO,KAAI,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;YACzD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAI,CAAC,IAAI,0CAAE,OAAO,KAAI,EAAE,CAAC,CAAC;YACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAI,CAAC,IAAI,0CAAE,oBAAoB,KAAI,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU,CAAC,SAAgB,EAAE,QAAgB,EAAE,SAAyB;QACtE,MAAM,GAAG,GAAG,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE;gBAC7B,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC;aACjB;YACD,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE;gBAC7B,OAAO,GAAG,CAAC;aACZ;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;;;;;ACrDM,MAAM,MAAM;IAgCjB;QA/BO,OAAE,GAAQ;YACf,SAAS,EAAE;YACT;;;;;;;;;;;;;;;;;;;;;;;;;;iBA0BK;aACN;SACF,CAAC;IACa,CAAC;;4DAhCL,MAAM;uGAAN,MAAM,WAAN,MAAM,mBADO,MAAM;;;;;;;;;;;;;;;;;;;;;ACmBF;AAUoB;AAKA;;;AAG3C,MAAM,qBAAqB;IAChC,YAAmB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;IAAG,CAAC;IAE5B,IAAI,CAAC,OAAY;QACtB,OAAO,wCAAE,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;IACzB,CAAC;IAwBM,6BAA6B,CAClC,OAA0B,EAC1B,UAAe,MAAM,EACrB,iBAA0B,KAAK;QAE/B,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAExD,yBAAyB;QACzB,IAAI,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAChC,OAAO,gDAAU,CACf,IAAI,mEAAiB,CAAC;gBACpB,MAAM,EAAE,GAAG;gBACX,UAAU,EAAE,6CAA6C;gBACzD,GAAG,EAAE,2BAA2B;aACjC,CAAC,CACH,CAAC;SACH;QAED,uBAAuB;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;YACjB,OAAO,gDAAU,CACf,IAAI,mEAAiB,CAAC;gBACpB,MAAM,EAAE,GAAG;gBACX,UAAU,EAAE,+BAA+B;gBAC3C,GAAG,EAAE,2BAA2B;aACjC,CAAC,CACH,CAAC;SACH;QAED,uBAAuB;QACvB,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,EAAE;YACnC,OAAO,gDAAU,CACf,IAAI,mEAAiB,CAAC;gBACpB,MAAM,EAAE,GAAG;gBACX,UAAU,EAAE,gDAAgD;gBAC5D,GAAG,EAAE,2BAA2B;aACjC,CAAC,CACH,CAAC;SACH;QAED,OAAO,CAAC,gBAAgB,GAAG,+EAA2B,EAAE,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAErC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAsDM,2BAA2B,CAChC,KAAa,EACb,OAAgB,EAChB,IAAY,EACZ,IAAY,EACZ,MAAe,EACf,KAAe,EACf,UAAoB,EACpB,YAAsB,EACtB,OAAiB,EACjB,UAAe,MAAM,EACrB,iBAA0B,KAAK;QAE/B,OAAO,IAAI,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS;YAC/B,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM;SACpD,CAAC,CAAC;IACL,CAAC;;0FAhJU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBADR,MAAM;;;;;;;;;;;;;;;;;;ACrCuB;AAC+C;;;AAEtG,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,+GAAwB;KACpC;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,UAAU;KACvB;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHjB,iEAAoB,CAAC,MAAM,CAAC,EAC5B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;ACVjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,aAAa,CAAC;KACvB;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA2B;AAGF;AACT;AACmF;AAC5B;AACpC;AACP;AACF;AACqB;AACjB;AACN;AACI;AACW;AACN;AACC;AACN;AACI;AACR;AACA;AACY;AACN;AACJ;AAKjB;AACiB;AACa;AACT;AACA;AACN;AACW;AACT;AAIpB;AACsD;AACQ;AACzD;AACW;AAC0B;AACtB;AAC8B;AAChC;;;AAwDhD,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GANb;QACT,qDAAQ;QACR,gBAAgB;QAChB,EAAE,OAAO,EAAE,6EAAiB,EAAE,QAAQ,EAAE,EAAE,EAAE;QAC5C,EAAE,OAAO,EAAE,iFAAqB,EAAE,QAAQ,EAAE,EAAE,EAAE;KACjD,YAzCC,yDAAY;QACZ,gEAAa;QACb,0FAAuB;QACvB,qEAAa;QACb,iEAAgB;QAChB,6DAAoB,EAAE;QACtB,wDAAW;QACX,gEAAmB;QACnB,sEAAe;QACf,oEAAc;QACd,yFAAwB;QACxB,wEAAgB;QAChB,kEAAa;QACb,sEAAe;QACf,iFAAoB;QACpB,2EAAiB;QACjB,4EAAkB;QAClB,sEAAe;QACf,0EAAiB;QACjB,kEAAa;QACb,kEAAa;QACb,wEAAgB;QAChB,kEAAa;QACb,8EAAmB;QACnB,wEAAmB;QACnB,gFAAoB;QACpB,oEAAc;QACd,iFAAoB;QACpB,6EAAkB;QAClB,wEAAgB;QAChB,oEAAc;QACd,oEAAc;QACd,4EAAkB;QAClB,kEAAa;QACb,kEAAa;mIAUJ,SAAS,mBApDlB,wDAAY;QACZ,2IAA2B;QAC3B,+GAAwB;QACxB,oGAAmB;QACnB,4GAAuB;QACvB,gGAAmB,aAGnB,yDAAY;QACZ,gEAAa;QACb,0FAAuB;QACvB,qEAAa;QACb,iEAAgB,yDAEhB,wDAAW;QACX,gEAAmB;QACnB,sEAAe;QACf,oEAAc;QACd,yFAAwB;QACxB,wEAAgB;QAChB,kEAAa;QACb,sEAAe;QACf,iFAAoB;QACpB,2EAAiB;QACjB,4EAAkB;QAClB,sEAAe;QACf,0EAAiB;QACjB,kEAAa;QACb,kEAAa;QACb,wEAAgB;QAChB,kEAAa;QACb,8EAAmB;QACnB,wEAAmB;QACnB,gFAAoB;QACpB,oEAAc;QACd,iFAAoB;QACpB,6EAAkB;QAClB,wEAAgB;QAChB,oEAAc;QACd,oEAAc;QACd,4EAAkB;QAClB,kEAAa;QACb,kEAAa;;;;;;;;;;;;;;;;;;;ACvEjB,IAAY,kBAqBX;AArBD,WAAY,kBAAkB;IAC5B,iEAA2C;IAC3C,iFAA2D;IAC3D,2EAAqD;IAErD,6DAAuC;IACvC,uDAAiC;IAEjC,2DAAqC;IAErC,+DAAyC;IACzC,mEAA6C;IAC7C,iEAA2C;IAC3C,qDAA+B;IAC/B,mEAA6C;IAC7C,mEAA6C;IAC7C,6CAAuB;IACvB,2DAAqC;IACrC,iFAA2D;IAC3D,mFAA6D;IAC7D,yCAAmB;AACrB,CAAC,EArBW,kBAAkB,KAAlB,kBAAkB,QAqB7B;AAED,IAAY,sBAKX;AALD,WAAY,sBAAsB;IAChC,+CAAqB;IACrB,yCAAe;IACf,iDAAuB;IACvB,6CAAmB;AACrB,CAAC,EALW,sBAAsB,KAAtB,sBAAsB,QAKjC;AAED,IAAY,sBAMX;AAND,WAAY,sBAAsB;IAChC,yCAAe;IACf,uCAAa;IACb,uCAAa;IACb,yCAAe;IACf,yCAAe;AACjB,CAAC,EANW,sBAAsB,KAAtB,sBAAsB,QAMjC;AAcD,IAAY,iBAEX;AAFD,WAAY,iBAAiB;IAC3B,kDAA6B;AAC/B,CAAC,EAFW,iBAAiB,KAAjB,iBAAiB,QAE5B;AAkBM,MAAM,cAAc,GAAiB;IAC1C,mBAAmB,EAAE;QACnB,KAAK,EAAE,kCAAkC;QACzC,QAAQ,EAAE,sBAAsB,CAAC,IAAI;QACrC,OAAO,EAAE,kEAAkE;KAC5E;IACD,MAAM;IACN,2BAA2B,EAAE;QAC3B,KAAK,EAAE,qCAAqC;QAC5C,QAAQ,EAAE,sBAAsB,CAAC,IAAI;QACrC,OAAO,EAAE,sDAAsD;KAChE;IAED,iBAAiB,EAAE;QACjB,KAAK,EAAE,2BAA2B;QAClC,QAAQ,EAAE,sBAAsB,CAAC,IAAI;QACrC,OAAO,EAAE,4CAA4C;KACtD;IACD,gBAAgB,EAAE;QAChB,KAAK,EAAE,oCAAoC;QAC3C,QAAQ,EAAE,sBAAsB,CAAC,KAAK;QACtC,OAAO,EAAE,kDAAkD;KAC5D;IACD,kBAAkB,EAAE;QAClB,KAAK,EAAE,wCAAwC;QAC/C,QAAQ,EAAE,sBAAsB,CAAC,KAAK;QACtC,OAAO,EAAE,kDAAkD;KAC5D;IACD,MAAM;IACN,wBAAwB,EAAE;QACxB,KAAK,EAAE,sCAAsC;QAC7C,QAAQ,EAAE,sBAAsB,CAAC,KAAK;QACtC,OAAO,EAAE,kDAAkD;KAC5D;IAED,cAAc,EAAE;QACd,KAAK,EAAE,4BAA4B;QACnC,QAAQ,EAAE,sBAAsB,CAAC,KAAK;QACtC,OAAO,EAAE,wCAAwC;KAClD;IAED,oBAAoB,EAAE;QACpB,KAAK,EAAE,2BAA2B;QAClC,QAAQ,EAAE,sBAAsB,CAAC,IAAI;QACrC,OAAO,EAAE,iCAAiC;KAC3C;IACD,mBAAmB,EAAE;QACnB,KAAK,EAAE,sCAAsC;QAC7C,QAAQ,EAAE,sBAAsB,CAAC,IAAI;QACrC,OAAO,EAAE,yDAAyD;KACnE;IACD,oBAAoB,EAAE;QACpB,KAAK,EAAE,2CAA2C;QAClD,QAAQ,EAAE,sBAAsB,CAAC,IAAI;QACrC,OAAO,EAAE,yDAAyD;KACnE;IACD,oBAAoB,EAAE;QACpB,KAAK,EAAE,2BAA2B;QAClC,QAAQ,EAAE,sBAAsB,CAAC,IAAI;QACrC,OAAO,EAAE,uCAAuC;KACjD;IACD,aAAa,EAAE;QACb,KAAK,EAAE,wCAAwC;QAC/C,QAAQ,EAAE,sBAAsB,CAAC,IAAI;QACrC,OAAO,EAAE,oCAAoC;KAC9C;IACD,SAAS,EAAE;QACT,KAAK,EAAE,iCAAiC;QACxC,QAAQ,EAAE,sBAAsB,CAAC,IAAI;QACrC,OAAO,EAAE,2BAA2B;KACrC;IACD,gBAAgB,EAAE;QAChB,KAAK,EAAE,iCAAiC;QACxC,QAAQ,EAAE,sBAAsB,CAAC,KAAK;QACtC,OAAO,EAAE,yDAAyD;KACnE;IACD,OAAO,EAAE;QACP,KAAK,EAAE,2BAA2B;QAClC,QAAQ,EAAE,sBAAsB,CAAC,KAAK;QACtC,OAAO,EAAE,0BAA0B;KACpC;IAED,2BAA2B,EAAE;QAC3B,KAAK,EAAE,mDAAmD;QAC1D,QAAQ,EAAE,sBAAsB,CAAC,KAAK;QACtC,OAAO,EAAE,sCAAsC;KAChD;IACD,4BAA4B,EAAE;QAC5B,KAAK,EAAE,+CAA+C;QACtD,QAAQ,EAAE,sBAAsB,CAAC,IAAI;QACrC,OAAO,EACL,mEAAmE;KACtE;CACF,CAAC;;;;;;;;;;;;;;;;;;;;AC9KF,IAAY,aAGX;AAHD,WAAY,aAAa;IACvB,kCAAiB;IACjB,gCAAe;AACjB,CAAC,EAHW,aAAa,KAAb,aAAa,QAGxB;AAEM,MAAM,iBAAiB,GAAuC;IACnE,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE,OAAO;CACf,CAAC;AAEF,IAAY,mBAIX;AAJD,WAAY,mBAAmB;IAC7B,wCAAiB;IACjB,kDAA2B;IAC3B,wEAAiD;AACnD,CAAC,EAJW,mBAAmB,KAAnB,mBAAmB,QAI9B;AAEM,MAAM,uBAAuB,GAClC;IACE,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,YAAY;IACzB,sBAAsB,EAAE,sBAAsB;CAC/C,CAAC;AAEJ,IAAY,sBAGX;AAHD,WAAY,sBAAsB;IAChC,yDAA+B;IAC/B,iDAAuB;AACzB,CAAC,EAHW,sBAAsB,KAAtB,sBAAsB,QAGjC;AAEM,MAAM,0BAA0B,GAEnC;IACF,aAAa,EAAE,cAAc;IAC7B,SAAS,EAAE,UAAU;CACtB,CAAC;;;;;;;;;;;;;;;;;;;;AC5C6E;;;;;;;ICA/E,kFAGoB;;;;;ADKb,MAAM,uBAAuB;IASlC,YAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAP3B,uBAAkB,GAAY,KAAK,CAAC;QACpC,oBAAe,GAAY,IAAI,CAAC;QAEhC,gBAAW,GAAW,WAAW,CAAC;QAClC,sBAAiB,GAAY,KAAK,CAAC;QAClC,WAAM,GAAuB,IAAI,uDAAY,EAAQ,CAAC;QACtD,YAAO,GAAuB,IAAI,uDAAY,EAAQ,CAAC;IAC1B,CAAC;IAExC,QAAQ,KAAU,CAAC;IAEZ,aAAa;QAClB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB;;;;;;;;;;;;;;;;;;;;;kBAqBE;aACH;SACF;IACH,CAAC;IAEM,eAAe;QACpB,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACpD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SACrB;IACH,CAAC;;8FA9CU,uBAAuB;qHAAvB,uBAAuB;;QCRpC,6IAGoB;QAEpB,yEAMC;QAGgC,uDAAW;QAAA,4DAAM;QAC5C,0EAAmC;QACjC,qEAA8C;QAChD,4DAAO;QAET,yEAA6B;QAC3B,6DAAyB;QAC3B,4DAAM;QACN,0EAA6B;QAE0B,mEAAO;QAAA,4DAAS;QACnE,8EAMC;QADC,gJAAS,qBAAiB,IAAC;QAE3B,wDACF;QAAA,4DAAS;;QA/Bd,qFAAqB;QAKtB,0DAGE;QAHF,uLAGE;QAEG,0DAA6C;QAA7C,mKAA6C;QAEnB,0DAAW;QAAX,0EAAW;QASjC,0DAA6C;QAA7C,mKAA6C;QAM9C,0DAA8B;QAA9B,2FAA8B;QAG9B,0DACF;QADE,2FACF;;;;;;;;;;;;;;;;;;;;;AC1BD,MAAM,mBAAmB;IAG9B;QAFS,qBAAgB,GAAoE,WAAW,CAAC;IAE1F,CAAC;;sFAHL,mBAAmB;iHAAnB,mBAAmB;;QCPhC,yEAAyB;QACrB,oEAA6D;QAC7D,+EAAkC;QACtC,4DAAM;;QAFwB,0DAA4B;QAA5B,yFAA4B;;;;;;;;;;;;;;;;;;;;ACOnC;AAC0C;AAEhB;;;;;ICD7C,mEAA4D;;;IAC5D,mEAAiE;;;;ADO9D,MAAM,mBAAmB;IAa9B;QAVO,oBAAe,GAAW,CAAC,CAAC;IAUpB,CAAC;IANhB,IAAwB,OAAO,CAAC,OAAmB;QACjD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAClC;IACH,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CACxC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,CACpC,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;IAC7E,CAAC;;sFAvBU,mBAAmB;iHAAnB,mBAAmB;+EAMb,iEAAY;;;;;kEADlB,6DAAQ;kEAER,2DAAO;;;;;;;QCzBpB,yEAMC;;QACC,2EAA2C;QACzC,6DAAyB;QAEzB,6GAA4D;QAC5D,6GAAiE;QACnE,4DAAQ;;QAVR,0PAGE;QAEe,0DAAyB;QAAzB,sFAAyB;QAGpB,0DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXU;AACJ;AACK;AAC7B;AAOH;;;;;;;;;;;;;;;ICCnC,0EAA6D;IACf,uDAE1C;IAAA,4DAAmB;;;IAFuB,0DAE1C;IAF0C,qIAE1C;;;IAiBA,4EACG;IAAA,6HAAyC;IAAA,4DAC3C;;;IAYC,iFAGG;IAAA,uDAAc;IAAA,4DAChB;;;IAFC,8EAAkB;IACjB,0DAAc;IAAd,4EAAc;;;IAwBnB,uFAGG;IAAA,uDAAc;IAAA,4DAChB;;;IAFC,8EAAkB;IACjB,0DAAc;IAAd,4EAAc;;;IAmBjB,4EACG;IAAA,qIACI;IAAA,4DACN;;;IAsBD,4EACG;IAAA,6HAAyC;IAAA,4DAC3C;;;ADvGJ,MAAM,2BAA2B;IAStC,YACS,SAAoD,EAEpD,IAGN,EACM,sBAA8C,EACrD,EAAe;QAPR,cAAS,GAAT,SAAS,CAA2C;QAEpD,SAAI,GAAJ,IAAI,CAGV;QACM,2BAAsB,GAAtB,sBAAsB,CAAwB;QAdhD,oBAAe,GAAY,KAAK,CAAC;QACjC,oBAAe,GAAY,KAAK,CAAC;QAEjC,YAAO,GAAuB,IAAI,uDAAY,EAAE,CAAC;QACjD,oBAAe,GAAG,MAAM,CAAC,OAAO,CAAC,8EAAiB,CAAC,CAAC;QACpD,6BAAwB,GAAG,MAAM,CAAC,OAAO,CAAC,uFAA0B,CAAC,CAAC;QACtE,0BAAqB,GAAG,MAAM,CAAC,OAAO,CAAC,oFAAuB,CAAC,CAAC;QAWrE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACjC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC5C,kBAAkB,EAAE,CAAC,eAAe,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC5D,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,8DAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1C,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;QAEnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC/C,IAAI,CAAC,cAAc,GAAG,iDAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAClD;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACvC,IAAI,CAAC,eAAe,GAAG,CAAC,+CAAO,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAEY,eAAe;;YAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAE5B,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU;gBACtC,CAAC,CAAC,MAAM,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBACvE,CAAC,CAAC,MAAM,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CACjD,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EACzC,IAAI,CAAC,IAAI,CAAC,KAAK,CAChB,CAAC;YACN,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;gBACtB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBAEpB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;aACxB;YACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC;KAAA;;sGA7DU,2BAA2B,uMAW5B,qEAAe;yHAXd,2BAA2B;QClBxC,yEAAoC;QAOhC,kKAAU,mBAAe,IAAC,4GACf,qBAAiB,IADF;QAG1B,0EAAyB;QACvB,uHAIM;QAEN,yEAA2B;QAEZ,6EAAa;QAAA,4DAAY;QACpC,sEAOE;QACF,8EACG;QAAA,wDAA4C;QAAA,4DAC9C;QACD,qIAEC;QACH,4DAAiB;QACjB,qEAA8B;QAChC,4DAAM;QAEN,0EAA2B;QAEZ,+EAAc;QAAA,4DAAY;QACrC,kFAGC;QACC,wIAIC;QACH,4DAAa;QAIjB,0EAA2B;QAkBvB,oJAIC;QACH,4DAAkB;QAIpB,0EAA2B;QAEZ,gEAAI;QAAA,4DAAY;QAC3B,wEAME;QACF,+EACG;QAAA,wDAA4C;QAAA,4DAC9C;QACD,qIAGC;QACH,4DAAiB;QACjB,qEAA8B;QAChC,4DAAM;QAEN,0EAA2B;QAEZ,uEAAW;QAAA,4DAAY;QAClC,+EAUY;QACZ,+EACG;QAAA,wDAAoD;QAAA,4DACtD;QACD,qIAEC;QACH,4DAAiB;QACjB,qEAA8B;QAChC,4DAAM;;QA1HR,0DAAiE;QAAjE,wIAAiE;QAQ3D,0DAAkB;QAAlB,+EAAkB;QACe,0DAAsB;QAAtB,sFAAsB;QAkBpD,0DAA4C;QAA5C,mLAA4C;QAEnC,0DAAiD;QAAjD,4JAAiD;QAevC,0DAAkB;QAAlB,wFAAkB;QA2BpB,0DAA2B;QAA3B,iGAA2B;QAmB5C,0DAA4C;QAA5C,mLAA4C;QAEnC,0DAA0C;QAA1C,qJAA0C;QAuBnD,0DAAoD;QAApD,2LAAoD;QAE3C,0DAAiD;QAAjD,4JAAiD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHZ;AACtB;AAOI;AAG2D;AACrB;AAC9B;;;;;;;;;;;;;ICfjD,sEAAuB;IAAA,gGAAgC;IAAA,4DAAM;;;IA8CzD,qEAA8B;IAAA,iFAAiB;IAAA,4DAAK;;;IAShD,yEAAsD;IAAA,6EAAa;IAAA,4DAAK;;;IACxE,yEAAuC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,iFAAkB;;;IAIzD,yEAAsD;IAAA,+DAAI;IAAA,4DAAK;;;IAC/D,yEAAuC;IACrC,uDACF;IAAA,4DAAK;;;;IADH,0DACF;IADE,yHACF;;;IAIA,yEAAsD;IAAA,sEAAW;IAAA,4DAAK;;;IACtE,yEAAuC;IACrC,uDACF;IAAA,4DAAK;;;;IADH,0DACF;IADE,2IACF;;;IAIA,yEAAsD;IAAA,+DAAI;IAAA,4DAAK;;;IAC/D,yEAAuC;IACrC,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,mGACF;;;IAIA,yEAAsD;IAAA,sEAAW;IAAA,4DAAK;;;IACtE,yEAAuC;IACrC,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,0GACF;;;IASJ,sFAKG;IAAA,4EAAY;IAAA,4DACd;;;;IAGH,sFAKC;IADC,wUAAc,oFAAkB,KAAC;;IAEjC,2HAA2C;IAAA,gEAAM;IAAA,uDACnD;IAAA,4DAAkB;;;IALhB,2GAA0C;IAIO,0DACnD;IADmD,uGACnD;;;IACA,4EAGc;;IAFZ,0EAAiB;;;;ADzFd,MAAM,wBAAwB;IAkCnC,YACS,qBAA6C,EAC7C,cAA8B,EAC9B,MAAiB;QAFjB,0BAAqB,GAArB,qBAAqB,CAAwB;QAC7C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAW;QAnCnB,eAAU,GAAW,EAAE,CAAC;QACxB,qBAAgB,GAAG;YACxB,MAAM;YACN,WAAW;YACX,oBAAoB;YACpB,MAAM;YACN,aAAa;SACd,CAAC;QAEK,iBAAY,GAAY,IAAI,CAAC;QAC7B,oBAAe,GAAG,8EAAiB,CAAC;QACpC,6BAAwB,GAAG,uFAA0B,CAAC;QACtD,0BAAqB,GAAG,oFAAuB,CAAC;QAChD,oBAAe,GAAW,CAAC,CAAC;QAE5B,cAAS,GAAY,KAAK,CAAC;IAqB/B,CAAC;IAfI,SAAS;QACf,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACb,EAAE,EAAE,EAAE;YACN,KAAK,EAAE,EAAE;YACT,YAAY,EAAE,KAAK;SACpB,CAAC,CAAC;IACL,CAAC;IAQD,iBAAiB;QACf,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QACvD,QAAQ,IAAI,EAAE;YACZ,KAAK,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC7B,OAAO,MAAM,CAAC;YAChB,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAO,MAAO,CAAC,GAAG;gBACnD,OAAO,OAAO,CAAC;YACjB,KAAK,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAO,MAAO,CAAC,MAAM;gBACzD,OAAO,QAAQ,CAAC;YAClB,KAAK,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAChC,OAAO,IAAI,CAAC;YACd,KAAK,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAChC,OAAO,SAAS,CAAC;YACnB,KAAK,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC/B,OAAO,QAAQ,CAAC;YAClB;gBACE,OAAO,OAAO,CAAC;SAClB;IACH,CAAC;IAEK,QAAQ;;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,EAAE,IAAI,SAAS,CAAC;YACvD,IAAI,CAAC,UAAU,GAAG,IAAI,yFAAqB,CACzC,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,GAAG,CAAC,EAAE,QAAQ,GAAG,GAAG,EAAE,EAAE,CAChD,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,CAC3C,KAAK,EACL,OAAO,EACP,SAAS,EACT,QAAQ,CACT,CACJ,CAAC;YACF,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAE9B,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CACxC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,CACpC,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC;QAC9E,CAAC;KAAA;IAED,eAAe;QACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,mDAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACnE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,CAClB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,CACxB,CAAC;IACJ,CAAC;IAEY,sBAAsB;;;YACjC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;aAC9B;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAClB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,YAAY,EACjB,CAAC,EACD,WAAI,CAAC,SAAS,0CAAE,QAAQ,KAAI,GAAG,CAChC,CAAC;YACF,IAAI,CAAC,SAAS,EAAE,CAAC;;KAClB;IAEM,iBAAiB,CAAC,GAAuB;QAC9C,IAAI,CAAC,MAAM;aACR,IAAI,CAAC,6GAA2B,EAAE;YACjC,IAAI,EAAE;gBACJ,UAAU,EAAE,CAAC,GAAG;gBAChB,cAAc,EAAE,GAAG;gBACnB,wBAAwB,EAAE,EAAE;gBAC5B,uBAAuB;gBACvB,0BAA0B;gBAC1B,2CAA2C;aAC5C;SACF,CAAC;aACD,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE;YACxC,IAAI,CAAC,cAAc,CAAC,WAAW,CAC7B,SAAS,EACT,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAAE,CAC/C,CAAC;YACF,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,eAAe,CAAC,GAAY;QACjC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QACxB,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAEM,MAAM,CAAC,CAAC;QACb,wCAAwC;QACxC,IAAI,CAAC,CAAC,MAAM,KAAK,aAAa,EAAE;YAC9B,OAAO;SACR;QAED,2BAA2B;QAC3B,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE;YAChB,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;SAC1C;QAED,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,KAAK,CAAC;QACtD,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;IAED,UAAU,CAAC,SAAgB,EAAE,QAAgB,EAAE,SAAyB;QACtE,MAAM,GAAG,GAAG,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE;gBAC7B,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC;aACjB;YACD,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE;gBAC7B,OAAO,GAAG,CAAC;aACZ;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;;gGA/JU,wBAAwB;sHAAxB,wBAAwB;kEAmBxB,sEAAY;kEAEZ,4DAAO;;;;;;QC3CpB,oHAA6D;QAE7D,yEAA8E;QAItC,iGAAuB;QAAA,4DAAM;QAC7D,yEAAmC;QAAA,mGAA8B;QAAA,4DAAM;QAG3E,yEAAkC;QAK9B,iJAAS,uBAAmB,IAAC;QAE7B,qEAAmD;QACnD,oFACF;QAAA,4DAAS;QAab,0EAAyB;QAcvB,oHAAoD;QAEpD,uFAKC;QADC,gLAAiB,kBAAc,IAAC;QAEhC,6EAAkC;QAChC,qHAAwE;QACxE,qHAA8D;QAChE,qEAAe;QAEf,6EAAuC;QACrC,qHAA+D;QAC/D,qHAEK;QACP,qEAAe;QAEf,6EAAgD;QAC9C,qHAAsE;QACtE,qHAEK;QACP,qEAAe;QAEf,6EAAkC;QAChC,qHAA+D;QAC/D,qHAEK;QACP,qEAAe;QAEf,6EAAyC;QACvC,qHAAsE;QACtE,qHAEK;QACP,qEAAe;QACjB,4DAAkB;QAClB,gFAKiB;QACjB,+IAMC;;QACH,4DAAM;QAEN,+IAOkB;QAClB,qIAGc;;QAChB,4DAAM;;QAlHA,+EAAe;QAES,0DAA+C;QAA/C,4GAA+C;QA4CpE,2DAAuB;QAAvB,uFAAuB;QAG1B,0DAAyB;QAAzB,sFAAyB;QAuCzB,2DAAwC;QAAxC,2IAAwC;QAMvC,0DAEA;QAFA,0MAEA;QAOF,0DAAoB;QAApB,oFAAoB;QASpB,0DAAwE;QAAxE,yMAAwE;;;;;;;;;;;;;;;;;;;;;;AC/GvC;;;;AAU/B,MAAM,sBAAsB;IACjC,YACS,cAAqC,EACrC,WAAkC;QADlC,mBAAc,GAAd,cAAc,CAAuB;QACrC,gBAAW,GAAX,WAAW,CAAuB;IACxC,CAAC;IAES,kBAAkB,CAC7B,KAAc,EACd,OAAiB,EACjB,SAAS,GAAG,CAAC,EACb,QAAQ,GAAG,GAAG;;YAEd,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CACjC,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAC7C,KAAK,EACL,OAAO,EACP,SAAS,EACT,QAAQ,CACT,EACD,0BAA0B,CAC3B,CAAC;QACJ,CAAC;KAAA;IAEY,kBAAkB,CAC7B,cAAiC;;YAEjC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CACjC,IAAI,CAAC,cAAc,CAAC,6BAA6B,CAAC,cAAc,CAAC,EACjE,oBAAoB,EACpB,IAAI,CACL,CAAC;QACJ,CAAC;KAAA;IAEY,iBAAiB,CAC5B,EAAU,EACV,cAAiC;;YAEjC,cAAc,CAAC,gBAAgB,GAAG,EAAE,CAAC;YACrC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,wCAAE,EAAE,EAAE,wBAAwB,EAAE,IAAI,CAAC,CAAC;QAC5E,CAAC;KAAA;IAEM,kCAAkC,CAAC,IAAY;QACpD,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;QAChB;;;;;aAKK;IACP,CAAC;;4FAjDU,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;;;;;;;;;;;;;;;;;;;;;ACPwB;AAEC;;;AAOtC,MAAM,qBAAqB;IAChC,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAExC,WAAW,CACtB,OAAwB,EACxB,SAAiB,EACjB,mBAA4B,KAAK;;YAEjC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC7B,OAAO;qBACJ,IAAI,CACH,0DAAU,CAAC,CAAC,GAAG,EAAE,EAAE;oBACjB,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrB,MAAM,KAAK,GAAG,qEAAwB,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;oBACvD,IAAI,gBAAgB,EAAE;wBACpB,IAAI,CAAC,cAAc,CAAC,WAAW,CAC7B,OAAO;wBACP;;;;0CAIkB;wBAClB,YAAY,EACZ,KAAK,CAAC,OAAO,EACb,EAAE,cAAc,EAAE,IAAI,EAAE,CACzB,CAAC;qBACH;oBACD,OAAO,CAAC;wBACN,KAAK;qBACN,CAAC,CAAC;oBACH,MAAM,GAAG,CAAC;gBACZ,CAAC,CAAC,CACH;qBACA,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBAClB,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,EAAE,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;;0FArCU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;;;;;;;;;;;;;;;;;;;ACNpB,MAAM,mBAAmB,GAA8B;IACrD,OAAO,EAAE,IAAI;IACb,UAAU,EAAE,IAAI;CACjB,CAAC;AAEF,MAAM,oBAAoB,GAA8B;IACtD,cAAc,EAAE,IAAI;IACpB,UAAU,EAAE,IAAI;IAChB,WAAW,EAAE,IAAI;CAClB,CAAC;AACF,MAAM,sBAAsB,GAA8B,mBAAmB,CAAC;AAKvE,MAAM,cAAc;IACzB,YAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;IAAG,CAAC;IAE9C,WAAW,CAChB,IAAkC,EAClC,KAAc,EACd,OAAgB,EAChB,MAAkC;QAElC,QAAQ,IAAI,EAAE;YACZ,KAAK,MAAM;gBACT,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,kCACzC,mBAAmB,GACnB,MAAM,EACT,CAAC;YACL,KAAK,OAAO;gBACV,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,kCAC1C,oBAAoB,GACpB,MAAM,EACT,CAAC;YACL,KAAK,SAAS;gBACZ,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,kCAC5C,mBAAmB,GACnB,MAAM,EACT,CAAC;YACL;gBACE,MAAM,0CAA0C,CAAC;SACpD;IACH,CAAC;;4EA5BU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;ACdkB;AAEsC;AAErE,MAAM,QAAQ;IACnB,MAAM,CAAO,KAAK,CAChB,IAAc,EACd,YAAsB,GAAG,EAAE,CAAC,IAAI,EAChC,WAAmB,EAAE,EACrB,WAAgB,aAAa,EAC7B,UAAkB,CAAC,EACnB,WAAmB,IAAI;;YAEvB,MAAM,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;YAC7D,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,IAAI,CAAC;YACT,IAAI,KAAK,CAAC;YACV,OAAO,KAAK,GAAG,OAAO,EAAE;gBACtB,IAAI;oBACF,IAAI,GAAG,MAAM,IAAI,EAAE,CAAC;oBACpB,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;wBACnB,OAAO,IAAI,CAAC;qBACb;yBAAM;wBACL,OAAO,CAAC,GAAG,CACT,eACE,KAAK,GAAG,CACV,UAAU,iBAAiB,0BAA0B,CACtD,CAAC;wBACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;qBACnB;iBACF;gBAAC,OAAO,GAAG,EAAE;oBACZ,KAAK,GAAG,GAAG,CAAC;oBACZ,OAAO,CAAC,GAAG,CACT,eACE,KAAK,GAAG,CACV,UAAU,iBAAiB,wBAAwB,CACpD,CAAC;oBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAClB;gBACD,KAAK,EAAE,CAAC;gBACR,MAAM,qDAAc,CAAC,QAAQ,CAAC,CAAC;aAChC;YAED,OAAO,CAAC,GAAG,CACT,eAAe,iBAAiB,UAAU,OAAO,6BAA6B,CAC/E,CAAC;YACF,MAAM;gBACJ,OAAO,EAAE,8BAA8B,iBAAiB,EAAE;gBAC1D,gBAAgB,EAAE,IAAI;gBACtB,KAAK;gBACL,QAAQ;aACT,CAAC;QACJ,CAAC;KAAA;IAED,MAAM,CAAC,eAAe,CAAC,KAAU,EAAE,YAAoB,EAAE;;QACvD,MAAM,kBAAkB,GAAG,GACzB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC1D,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,KACN,GAAG,SAAS,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACrB,OAAO;gBACL,OAAO,EAAE,iDAAiD;gBAC1D,SAAS,EAAE,IAAI;aAChB,CAAC;SACH;QACD,MAAM,MAAM,GAAG,MAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,MAAI,WAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,MAAM,EAAC;QACrD,IAAI,CAAC,MAAM,EAAE;YACX,OAAO;gBACL,OAAO,EAAE,qEAAqE;aAC/E,CAAC;SACH;QACD,QAAQ,MAAM,EAAE;YACd,KAAK,GAAG;gBACN,OAAO;oBACL,IAAI,EAAE,GAAG;oBACT,OAAO,EAAE,gEAAgE;iBAC1E,CAAC;YACJ,KAAK,GAAG;gBACN,OAAO;oBACL,IAAI,EAAE,GAAG;oBACT,OAAO,EAAE,qEAAqE;iBAC/E,CAAC;YACJ,KAAK,GAAG;gBACN,OAAO;oBACL,IAAI,EAAE,GAAG;oBACT,OAAO,EAAE,8EAA8E;iBACxF,CAAC;YACJ,YAAY;YACZ,6DAA6D;YAC7D,KAAK,GAAG;gBACN,OAAO;oBACL,IAAI,EAAE,GAAG;oBACT,OAAO,EAAE,qEAAqE;iBAC/E,CAAC;YACJ,KAAK,GAAG;gBACN,OAAO;oBACL,IAAI,EAAE,GAAG;oBACT,OAAO,EAAE,gFAAgF;oBACzF,SAAS,EAAE,IAAI;iBAChB,CAAC;YACJ;gBACE,OAAO;oBACL,OAAO,EAAE,qEAAqE;oBAC9E,IAAI,EAAE,MAAM;iBACb,CAAC;SACL;IACH,CAAC;IAED,MAAM,CAAC,0CAA0C,CAC/C,KAAU;QAEV,MAAM,OAAO,GAAuB;YAClC,KAAK;YACL,QAAQ,EACN,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC;gBAClD,CAAC,CAAC,sEAA4B;gBAC9B,CAAC,CAAC,SAAS;SAChB,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACrB,OAAO,CAAC,WAAW,GAAG,YAAY,CAAC;SACpC;aAAM,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;YACxC,OAAO,CAAC,WAAW,GAAG,oBAAoB,CAAC;SAC5C;aAAM,IACL,KAAK;YACL,KAAK,CAAC,MAAM,KAAK,GAAG;YACpB,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,6BAA6B,CAAC,EACvD;YACA,OAAO,CAAC,WAAW,GAAG,eAAe,CAAC;YACtC,OAAO,CAAC,QAAQ,GAAG,sEAA4B,CAAC;SACjD;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;;;;;;;;;;;;;;;;;;;ACxIgC;AACL;AACrB,MAAM,QAAQ;IACnB,MAAM,CAAC,KAAK,CAAC,EAAU;QACrB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,kBAAkB;QACvB,IAAI,EAAE,GAAG,GAAG,EAAE;YACZ,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,OAAO,CAAC;iBAC7C,QAAQ,CAAC,EAAE,CAAC;iBACZ,SAAS,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC;QACF,OAAO,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;IACxE,CAAC;IAED,MAAM,CAAC,kBAAkB;QACvB,MAAM,OAAO,GAAG,6CAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAE7D,MAAM,cAAc,GAAG,OAAO,CAC5B,OAAO,CAAC,SAAS,CAAC;YAChB,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,IAAI;YACb,gBAAgB,EAAE,MAAM;SACzB,CAAC,CACH,CAAC;QAEF,MAAM,qBAAqB,GACzB,UAAU,IAAI,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,uBAAuB;YACrE,eAAe,IAAI,QAAQ;YAC3B,cAAc,IAAI,MAAM;YACxB,kBAAkB,IAAI,MAAM;YAC5B,sBAAsB,IAAI,MAAM;YAChC,WAAW,IAAI,MAAM;YACrB,eAAe,IAAI,SAAS;YAC5B,WAAW,IAAI,SAAS,CAAC;QAC3B,OAAO,cAAc,IAAI,qBAAqB,CAAC;IACjD,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,GAAQ;QACxB,OAAO,CAAC,SAAS,KAAK,CAAC,OAAO;YAC5B,0CAAQ,CAAC,OAAO,EAAE,UAAU,KAAK,EAAE,GAAG;gBACpC,IACE,+CAAa,CAAC,KAAK,CAAC;oBACpB,0CAAQ,CAAC,KAAK,CAAC;oBACf,yCAAO,CAAC,KAAK,CAAC;oBACd,CAAC,4CAAU,CAAC,KAAK,CAAC,IAAI,2CAAS,CAAC,KAAK,CAAC,CAAC;oBACvC,CAAC,4CAAU,CAAC,KAAK,CAAC,IAAI,2CAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAC9C;oBACA,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC;iBACrB;YACH,CAAC,CAAC,CAAC;YACH,uDAAuD;YACvD,wBAAwB;YACxB,IAAI,2CAAS,CAAC,OAAO,CAAC;gBAAE,wCAAM,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YAEnD,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC,6CAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,4DAA4D;IACpF,CAAC;;AAED,uFAAuF;AAChF,iBAAQ,GAAG,UAAU,GAAW;IACrC,IAAI,IAAI,GAAG,CAAC,EACV,CAAC,EACD,GAAG,CAAC;IACN,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC;IAClC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/B,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC;QAChC,IAAI,IAAI,CAAC,CAAC,CAAC,2BAA2B;KACvC;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;;;;;;;;;;;;;;;ACxEG,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;CACjB,CAAC;;;;;;;;;;;;;;;;;ACF6C;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/API/mock/CustomAsyncDataSource.ts","./src/app/API/mock/mockDB.ts","./src/app/API/mock/referentialAPI.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/model/event.ts","./src/app/model/privateNetworkDto.ts","./src/app/referentials/edition-wrapper/edition-wrapper.component.ts","./src/app/referentials/edition-wrapper/edition-wrapper.component.html","./src/app/referentials/empty-state/empty-state.component.ts","./src/app/referentials/empty-state/empty-state.component.html","./src/app/referentials/paginated-table/async-table.component.ts","./src/app/referentials/paginated-table/async-table.component.html","./src/app/referentials/private-networks/private-network-form/private-network-form.component.ts","./src/app/referentials/private-networks/private-network-form/private-network-form.component.html","./src/app/referentials/private-networks/private-networks.component.ts","./src/app/referentials/private-networks/private-networks.component.html","./src/app/referentials/private-networks/private-networks.service.ts","./src/app/services/api-call-wrapper.service.ts","./src/app/services/toaster.service.ts","./src/app/utils/apiUtils.ts","./src/app/utils/gddUtils.ts","./src/environments/environment.prod.ts","./src/main.ts"],"sourcesContent":["import { CollectionViewer, DataSource } from '@angular/cdk/collections';\r\nimport { BehaviorSubject, from, Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ApiErrorDisplay } from 'src/app/model/models';\r\n\r\nexport class CustomAsyncDataSource<T> implements DataSource<T> {\r\n  public elementsSubject = new BehaviorSubject<T[]>([]);\r\n  private loadingSubject = new BehaviorSubject<boolean>(false);\r\n  private nbOfResultsSubject = new BehaviorSubject<number>(0);\r\n  private errorDisplaySubject = new BehaviorSubject<ApiErrorDisplay>(null);\r\n\r\n  public sort: any;\r\n\r\n  public loading$ = this.loadingSubject.asObservable();\r\n  public numberOfResults$ = this.nbOfResultsSubject.asObservable();\r\n  public errorDisplay$ = this.errorDisplaySubject.asObservable();\r\n\r\n  constructor(public funcToCall: Function) {}\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<T[]> {\r\n    return this.elementsSubject.asObservable();\r\n  }\r\n\r\n  disconnect(collectionViewer: CollectionViewer): void {\r\n    this.elementsSubject.complete();\r\n    this.loadingSubject.complete();\r\n    this.nbOfResultsSubject.complete();\r\n    this.errorDisplaySubject.complete();\r\n  }\r\n\r\n  load(...args: any[]) {\r\n    this.loadingSubject.next(true);\r\n\r\n    from(this.funcToCall(...args))\r\n      .pipe(tap(console.log))\r\n      .subscribe((resp) => {\r\n        this.sortOnProp(resp.resp?.results || [], 'name', 'asc');\r\n        this.loadingSubject.next(false);\r\n        this.elementsSubject.next(resp.resp?.results || []);\r\n        this.nbOfResultsSubject.next(resp.resp?.totalNumberOfResults || 0);\r\n        this.errorDisplaySubject.next(resp.error);\r\n      });\r\n  }\r\n\r\n  sortOnProp(elsToSort: any[], attrName: string, direction: 'desc' | 'asc') {\r\n    const dir = direction === 'asc' ? 1 : -1;\r\n    elsToSort.sort(function (a, b) {\r\n      if (a[attrName] < b[attrName]) {\r\n        return dir * -1;\r\n      }\r\n      if (a[attrName] > b[attrName]) {\r\n        return dir;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class MockDb {\n  public db: any = {\n    pNetworks: [\n      /*  {\n        name: 'Bouygues Elec.',\n        fluidType: 'PUBLIC',\n        networkSensitivity: 'SENSITIVE',\n        code: '008970',\n        description: 'Réseau Bouygues électrique',\n        enabled: true,\n        privateNetworkId: '59d5b51f-cb00-3b8a-7f1e-c739da669f41',\n      },\n      {\n        name: 'Orange TRC',\n        fluidType: 'PRIVE',\n        networkSensitivity: 'NOT_SENSITIVE',\n        code: '',\n        description: 'jmdqfs dslqmjf sqmdf klmsdq flj dsq lf jds lkfmsdqkl f',\n        enabled: true,\n        privateNetworkId: '25a75a17-6b4e-7871-53bf-5516ec75d770',\n      },\n      {\n        name: 'Free Mob.',\n        fluidType: 'PRIVE',\n        networkSensitivity: 'NOT_SENSITIVE',\n        code: '0055674',\n        description: 'Free Mobile',\n        enabled: true,\n        privateNetworkId: '25a75a17-6b4e-7871-53bf-5516ec75d770',\n      }, */\n    ],\n  };\n  constructor() {}\n}\n","/**\r\n * KMU WAF API\r\n * KMU WAF API\r\n *\r\n * OpenAPI spec version: v1\r\n * Contact: youssef-externe.liouene@edf.fr\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\n\r\nimport { ApiResponseLandPlotDto } from '../../model/apiResponseLandPlotDto';\r\nimport { ApiResponseNetworkProviderDto } from '../../model/apiResponseNetworkProviderDto';\r\nimport { ApiResponseSetLandPlotDto } from '../../model/apiResponseSetLandPlotDto';\r\nimport { ApiResponseSetNetworkProviderDto } from '../../model/apiResponseSetNetworkProviderDto';\r\nimport { ApiResponseobject } from '../../model/apiResponseobject';\r\nimport { LandPlotDto } from '../../model/landPlotDto';\r\nimport { NetworkProviderDto } from '../../model/networkProviderDto';\r\n\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PrivateNetworkDto } from '../../model/privateNetworkDto';\r\nimport { ApiResponse } from '../../model/apiResponse';\r\nimport { MockDb } from './mockDB';\r\nimport { GddUtils } from 'src/app/utils/gddUtils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ReferentialAPIService {\r\n  constructor(public mock: MockDb) {}\r\n\r\n  public wrap(content: any): Observable<ApiResponse<any>> {\r\n    return of({ content });\r\n  }\r\n\r\n  /**\r\n   * createPrivateNetwork\r\n   *\r\n   * @param request request\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public createPrivateNetworkUsingPOST(\r\n    request: PrivateNetworkDto,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<ApiResponse<PrivateNetworkDto>>;\r\n  public createPrivateNetworkUsingPOST(\r\n    request: PrivateNetworkDto,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<ApiResponse<PrivateNetworkDto>>>;\r\n  public createPrivateNetworkUsingPOST(\r\n    request: PrivateNetworkDto,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<ApiResponse<PrivateNetworkDto>>>;\r\n  public createPrivateNetworkUsingPOST(\r\n    request: PrivateNetworkDto,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    const names = this.mock.db.pNetworks.map((n) => n.name);\r\n\r\n    // bug unicité sur le nom\r\n    if (names.includes(request.name)) {\r\n      return throwError(\r\n        new HttpErrorResponse({\r\n          status: 500,\r\n          statusText: 'ORA-00001 ERROR: Unique Constraint Violated',\r\n          url: 'https://fake-url/networks',\r\n        })\r\n      );\r\n    }\r\n\r\n    // bug code obligatoire\r\n    if (!request.code) {\r\n      return throwError(\r\n        new HttpErrorResponse({\r\n          status: 500,\r\n          statusText: 'Field \"code\" was not provided',\r\n          url: 'https://fake-url/networks',\r\n        })\r\n      );\r\n    }\r\n\r\n    // bug code obligatoire\r\n    if (request.description.length > 64) {\r\n      return throwError(\r\n        new HttpErrorResponse({\r\n          status: 500,\r\n          statusText: 'ORA-01401: Inserted value too large for column',\r\n          url: 'https://fake-url/networks',\r\n        })\r\n      );\r\n    }\r\n\r\n    request.privateNetworkId = GddUtils.generateRandomUuid();\r\n    this.mock.db.pNetworks.push(request);\r\n\r\n    return this.wrap(request);\r\n  }\r\n\r\n  /**\r\n   * fetchPrivateNetwork\r\n   *\r\n   * @param offset\r\n   * @param pageNumber\r\n   * @param pageSize\r\n   * @param paged\r\n   * @param sortSorted\r\n   * @param sortUnsorted\r\n   * @param unpaged\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public fetchPrivateNetworkUsingGET(\r\n    query: string,\r\n    enabled: boolean,\r\n    page: number,\r\n    size: number,\r\n    offset?: number,\r\n    paged?: boolean,\r\n    sortSorted?: boolean,\r\n    sortUnsorted?: boolean,\r\n    unpaged?: boolean,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<ApiResponse<PrivateNetworkDto[]>>;\r\n  public fetchPrivateNetworkUsingGET(\r\n    query: string,\r\n    enabled: boolean,\r\n    page: number,\r\n    size: number,\r\n    offset?: number,\r\n    paged?: boolean,\r\n    sortSorted?: boolean,\r\n    sortUnsorted?: boolean,\r\n    unpaged?: boolean,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<ApiResponse<PrivateNetworkDto[]>>>;\r\n  public fetchPrivateNetworkUsingGET(\r\n    query: string,\r\n    enabled: boolean,\r\n    page: number,\r\n    size: number,\r\n    offset?: number,\r\n    paged?: boolean,\r\n    sortSorted?: boolean,\r\n    sortUnsorted?: boolean,\r\n    unpaged?: boolean,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<ApiResponse<PrivateNetworkDto[]>>>;\r\n  public fetchPrivateNetworkUsingGET(\r\n    query: string,\r\n    enabled: boolean,\r\n    page: number,\r\n    size: number,\r\n    offset?: number,\r\n    paged?: boolean,\r\n    sortSorted?: boolean,\r\n    sortUnsorted?: boolean,\r\n    unpaged?: boolean,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    return this.wrap({\r\n      results: this.mock.db.pNetworks,\r\n      totalNumberOfResults: this.mock.db.pNetworks.length,\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PrivateNetworksComponent } from './referentials/private-networks/private-networks.component';\n\nconst routes: Routes = [\n  {\n    path: 'networks',\n    component: PrivateNetworksComponent,\n  },\n  {\n    path: '**',\n    redirectTo: 'networks',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tester-test';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PrivateNetworkFormComponent } from './referentials/private-networks/private-network-form/private-network-form.component';\nimport { PrivateNetworksComponent } from './referentials/private-networks/private-networks.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport {\n  MatBottomSheetModule,\n  MatBottomSheetRef,\n  MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport {\n  MatPaginatorModule,\n  MatPaginatorIntl,\n} from '@angular/material/paginator';\nimport { AsyncTableComponent } from './referentials/paginated-table/async-table.component';\nimport { EditionWrapperComponent } from './referentials/edition-wrapper/edition-wrapper.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { EmptyStateComponent } from './referentials/empty-state/empty-state.component';\nimport { MatSortModule } from '@angular/material/sort';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PrivateNetworkFormComponent,\n    PrivateNetworksComponent,\n    AsyncTableComponent,\n    EditionWrapperComponent,\n    EmptyStateComponent,\n  ],\n  imports: [\n    CommonModule,\n    OverlayModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    ToastrModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatDialogModule,\n    MatProgressBarModule,\n    MatSnackBarModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatBottomSheetModule,\n    MatChipsModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatStepperModule,\n    MatTableModule,\n    MatRadioModule,\n    MatPaginatorModule,\n    MatListModule,\n    MatSortModule,\n  ],\n  providers: [\n    DatePipe,\n    // FileSizePipe,\n    { provide: MatBottomSheetRef, useValue: {} },\n    { provide: MAT_BOTTOM_SHEET_DATA, useValue: {} },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export interface GddWebappEvent {\r\n  id?: string; // ! Not in the android model, do not send to Mbaas\r\n  name?: GddWebappEventType;\r\n  category?: GddWebappEventCategory;\r\n  severity?: GddWebappEventSeverity;\r\n  title?: string;\r\n  date?: Date;\r\n  appVersion?: string;\r\n  user?: string;\r\n  message?: string;\r\n  workspaceId?: string;\r\n  device?: string;\r\n  properties?: GddWebappEventCustomProperty[];\r\n  provider?: EventProviderEnum;\r\n  pushed?: boolean;\r\n}\r\n\r\nexport interface GddWebappEventCustomProperty {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport enum GddWebappEventType {\r\n  UPLOAD_FILE_SUCCESS = 'UPLOAD_FILE_SUCCESS',\r\n  UPLOAD_CONSULTATION_SUCCESS = 'UPLOAD_CONSULTATION_SUCCESS',\r\n  UPLOAD_CONSULTATION_FAIL = 'UPLOAD_CONSULTATION_FAIL',\r\n\r\n  UPLOAD_WD_SUCCESS = 'UPLOAD_WD_SUCCESS',\r\n  UPLOAD_WD_FAIL = 'UPLOAD_WD_FAIL',\r\n\r\n  UPLOAD_FILE_FAIL = 'UPLOAD_FILE_FAIL',\r\n\r\n  DOWNLOAD_FILE_FAIL = 'DOWNLOAD_FILE_FAIL',\r\n  DB_PURGE_USER_ACTION = 'DB_PURGE_USER_ACTION',\r\n  RESET_WS_FORGOT_PIN = 'RESET_WS_FORGOT_PIN',\r\n  EVENT_DB_INIT = 'EVENT_DB_INIT',\r\n  RESET_WS_USER_ACTION = 'RESET_WS_USER_ACTION',\r\n  RESET_WS_USER_CHANGE = 'RESET_WS_USER_CHANGE',\r\n  CREATE_WS = 'CREATE_WS',\r\n  SEND_EVENTS_FAIL = 'SEND_EVENTS_FAIL',\r\n  FAILED_TO_FETCH_REMOTE_CONF = 'FAILED_TO_FETCH_REMOTE_CONF',\r\n  MISSING_REMOTE_CONF_PROPERTY = 'MISSING_REMOTE_CONF_PROPERTY',\r\n  UNKNOWN = 'UNKNOWN',\r\n}\r\n\r\nexport enum GddWebappEventCategory {\r\n  BUSINESS = 'BUSINESS',\r\n  DEBUG = 'DEBUG',\r\n  TECHNICAL = 'TECHNICAL',\r\n  UNKNOWN = 'UNKNOWN',\r\n}\r\n\r\nexport enum GddWebappEventSeverity {\r\n  DEBUG = 'DEBUG',\r\n  INFO = 'INFO',\r\n  WARN = 'WARN',\r\n  ERROR = 'ERROR',\r\n  FATAL = 'FATAL',\r\n}\r\n\r\nexport interface EventsFilterParams {\r\n  name?: string;\r\n  date?: Date | string;\r\n  severity?: string | string[];\r\n  user?: string;\r\n  appVersion?: string;\r\n  dateEventAfter?: Date;\r\n  dateEventBefore?: Date;\r\n  dateStart?: string;\r\n  dateEnd?: string;\r\n}\r\n\r\nexport enum EventProviderEnum {\r\n  GDD_FRONTEND = 'GDD_FRONTEND',\r\n}\r\n\r\nexport interface EventTypeCategoryAndSeverity {\r\n  title: string;\r\n  severity: GddWebappEventSeverity;\r\n  message: string;\r\n}\r\n\r\nexport interface CreateEventOptions {\r\n  error?: Error | string;\r\n  severity?: GddWebappEventSeverity;\r\n  titleAppend?: string;\r\n}\r\n\r\nexport type EventTypeMap = {\r\n  [key in GddWebappEventType]: EventTypeCategoryAndSeverity;\r\n};\r\n\r\nexport const EVENT_TYPE_MAP: EventTypeMap = {\r\n  UPLOAD_FILE_SUCCESS: {\r\n    title: `Soumission d\\'un fichier réussie`,\r\n    severity: GddWebappEventSeverity.INFO,\r\n    message: 'File with external UUID /$/externalUuid/$/ successfully uploaded',\r\n  },\r\n  //TODO\r\n  UPLOAD_CONSULTATION_SUCCESS: {\r\n    title: `Création d'une consultation réussie`,\r\n    severity: GddWebappEventSeverity.INFO,\r\n    message: 'Successfully created consultation /$/externalUuid/$/',\r\n  },\r\n\r\n  UPLOAD_WD_SUCCESS: {\r\n    title: `Création d'une DT réussie`,\r\n    severity: GddWebappEventSeverity.INFO,\r\n    message: 'Successfully created WD /$/externalUuid/$/',\r\n  },\r\n  UPLOAD_FILE_FAIL: {\r\n    title: `Erreur de soumission d\\'un fichier`,\r\n    severity: GddWebappEventSeverity.ERROR,\r\n    message: '/$/messagePrecision/$/ (fichier: /$/filename/$/)',\r\n  },\r\n  DOWNLOAD_FILE_FAIL: {\r\n    title: `Erreur de téléchargement d\\'un fichier`,\r\n    severity: GddWebappEventSeverity.ERROR,\r\n    message: '/$/messagePrecision/$/ (fichier: /$/filename/$/)',\r\n  },\r\n  //TODO\r\n  UPLOAD_CONSULTATION_FAIL: {\r\n    title: `Echec de création d'une consultation`,\r\n    severity: GddWebappEventSeverity.ERROR,\r\n    message: 'Failed to create consultation /$/externalUuid/$/',\r\n  },\r\n\r\n  UPLOAD_WD_FAIL: {\r\n    title: `Echec de création d'une DT`,\r\n    severity: GddWebappEventSeverity.ERROR,\r\n    message: 'Failed to create WD /$/externalUuid/$/',\r\n  },\r\n\r\n  DB_PURGE_USER_ACTION: {\r\n    title: `Purge des données locales`,\r\n    severity: GddWebappEventSeverity.WARN,\r\n    message: 'The application data was purged',\r\n  },\r\n  RESET_WS_FORGOT_PIN: {\r\n    title: `Reinitialisation mot de passe oublié`,\r\n    severity: GddWebappEventSeverity.WARN,\r\n    message: 'The application was reset because of forgotten code pin',\r\n  },\r\n  RESET_WS_USER_CHANGE: {\r\n    title: `Reinitialisation changement d'utilisateur`,\r\n    severity: GddWebappEventSeverity.WARN,\r\n    message: 'The application was reset because of forgotten code pin',\r\n  },\r\n  RESET_WS_USER_ACTION: {\r\n    title: `Reinitialisation manuelle`,\r\n    severity: GddWebappEventSeverity.WARN,\r\n    message: 'The application was reset by the user',\r\n  },\r\n  EVENT_DB_INIT: {\r\n    title: `Initialisation de la base d\\'évènement`,\r\n    severity: GddWebappEventSeverity.INFO,\r\n    message: 'The event database was initialized',\r\n  },\r\n  CREATE_WS: {\r\n    title: `Création de l'espace de travail`,\r\n    severity: GddWebappEventSeverity.INFO,\r\n    message: 'Workspace was initialized',\r\n  },\r\n  SEND_EVENTS_FAIL: {\r\n    title: `Erreur à l'envoi des évènements`,\r\n    severity: GddWebappEventSeverity.ERROR,\r\n    message: 'An error occured while sending the events to the server',\r\n  },\r\n  UNKNOWN: {\r\n    title: `Évènement de type inconnu`,\r\n    severity: GddWebappEventSeverity.ERROR,\r\n    message: 'An unknown event occured',\r\n  },\r\n\r\n  FAILED_TO_FETCH_REMOTE_CONF: {\r\n    title: `Impossible de récupérer la configuration distante`,\r\n    severity: GddWebappEventSeverity.ERROR,\r\n    message: 'Could not fetch remote configuration',\r\n  },\r\n  MISSING_REMOTE_CONF_PROPERTY: {\r\n    title: `Propriété de configuration distante manquante`,\r\n    severity: GddWebappEventSeverity.WARN,\r\n    message:\r\n      'The remote configuration property /$/property/$/ was not received',\r\n  },\r\n};\r\n","export interface PrivateNetworkDto {\r\n  privateNetworkId?: string;\r\n  enabled?: boolean;\r\n  name?: string;\r\n  code?: string;\r\n  description?: string;\r\n  fluidType?: FluidTypeEnum;\r\n  networkLocation?: NetworkLocationEnum;\r\n  networkSensitivity?: NetworkSensitivityEnum;\r\n}\r\n\r\nexport enum FluidTypeEnum {\r\n  PUBLIC = 'PUBLIC',\r\n  PRIVE = 'PRIVE',\r\n}\r\n\r\nexport const FLUID_TYPE_LABELS: { [key in FluidTypeEnum]: string } = {\r\n  PUBLIC: 'Public',\r\n  PRIVE: 'Privé',\r\n};\r\n\r\nexport enum NetworkLocationEnum {\r\n  AERIAL = 'AERIAL',\r\n  UNDERGROUND = 'UNDERGROUND',\r\n  AERIAL_AND_UNDERGROUND = 'AERIAL_AND_UNDERGROUND',\r\n}\r\n\r\nexport const NETWORK_LOCATION_LABELS: { [key in NetworkLocationEnum]: string } =\r\n  {\r\n    AERIAL: 'Aérien',\r\n    UNDERGROUND: 'Souterrain',\r\n    AERIAL_AND_UNDERGROUND: 'Aérien et souterrain',\r\n  };\r\n\r\nexport enum NetworkSensitivityEnum {\r\n  NOT_SENSITIVE = 'NOT_SENSITIVE',\r\n  SENSITIVE = 'SENSITIVE',\r\n}\r\n\r\nexport const NETWORK_SENSITIVITY_LABELS: {\r\n  [key in NetworkSensitivityEnum]: string;\r\n} = {\r\n  NOT_SENSITIVE: 'Non sensible',\r\n  SENSITIVE: 'Sensible',\r\n};\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-edition-wrapper',\r\n  templateUrl: './edition-wrapper.component.html',\r\n  styleUrls: ['./edition-wrapper.component.scss'],\r\n})\r\nexport class EditionWrapperComponent implements OnInit {\r\n  @Input() isUpdateOngoing: boolean;\r\n  @Input() isFullScreenDialog: boolean = false;\r\n  @Input() wasFormModified: boolean = true;\r\n  @Input() title?: string;\r\n  @Input() confirmText: string = 'Confirmer';\r\n  @Input() isConfirmDisabled: boolean = false;\r\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() confirm: EventEmitter<void> = new EventEmitter<void>();\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public onCancelClick() {\r\n    if (!this.isUpdateOngoing) {\r\n      if (this.wasFormModified) {\r\n        /* const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n          disableClose: false,\r\n          autoFocus: false,\r\n          data: {\r\n            title: 'Quitter la page',\r\n            paragraphs: [\r\n              'Etes-vous sûr de vouloir quitter la page ?',\r\n              'Toutes les données saisies seront perdues.',\r\n            ],\r\n            cancelLabel: 'Annuler',\r\n            confirmLabel: 'Fermer',\r\n          },\r\n        });\r\n        dialogRef.componentInstance.decision.subscribe(async (confirm: any) => {\r\n          if (confirm) {\r\n            this.cancel.emit();\r\n          }\r\n          dialogRef.close();\r\n        });\r\n      } else {\r\n        this.cancel.emit();\r\n      } */\r\n      }\r\n    }\r\n  }\r\n\r\n  public onValidateClick() {\r\n    if (!this.isConfirmDisabled && !this.isUpdateOngoing) {\r\n      this.confirm.emit();\r\n    }\r\n  }\r\n}\r\n","<mat-progress-bar\r\n  mode=\"indeterminate\"\r\n  *ngIf=\"isUpdateOngoing\"\r\n></mat-progress-bar>\r\n\r\n<div\r\n  class=\"dialog\"\r\n  [ngClass]=\"{\r\n    loading: isUpdateOngoing,\r\n    'fullscreen-dialog': isFullScreenDialog\r\n  }\"\r\n>\r\n  <div [ngClass]=\"{ container: isFullScreenDialog }\">\r\n    <div class=\"dialog__header\">\r\n      <div class=\"dialog__title\">{{ title }}</div>\r\n      <span class=\"dialog__close-button\">\r\n        <span class=\"gdd-icon gdd-icon__close\"></span>\r\n      </span>\r\n    </div>\r\n    <div class=\"dialog__content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n    <div class=\"dialog__actions\">\r\n      <div [ngClass]=\"{ container: isFullScreenDialog }\">\r\n        <button mat-button mat-dialog-close class=\"btn-md\">Annuler</button>\r\n        <button\r\n          mat-flat-button\r\n          class=\"btn-md\"\r\n          color=\"primary\"\r\n          [disabled]=\"isConfirmDisabled\"\r\n          (click)=\"onValidateClick()\"\r\n        >\r\n          {{ confirmText }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-empty-state',\r\n  templateUrl: './empty-state.component.html',\r\n  styleUrls: ['./empty-state.component.scss'],\r\n})\r\nexport class EmptyStateComponent {\r\n  @Input() illustrationType: 'documents' | 'box' | 'thumbs-up' | 'comments' | 'unaccessible' = 'documents';\r\n\r\n  constructor() {}\r\n}\r\n","<div class=\"empty-state\">\r\n    <div class=\"illustration\" [ngClass]=\"illustrationType\"></div>\r\n    <ng-content class=\"\"></ng-content>\r\n</div>","import {\r\n  Component,\r\n  ContentChildren,\r\n  Input,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChild,\r\n  ElementRef,\r\n} from '@angular/core';\r\nimport { MatColumnDef, MatTable } from '@angular/material/table';\r\nimport { CustomAsyncDataSource } from 'src/app/API/mock/CustomAsyncDataSource';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-async-table',\r\n  templateUrl: './async-table.component.html',\r\n  styleUrls: ['./async-table.component.scss'],\r\n})\r\nexport class AsyncTableComponent implements OnInit {\r\n  @Input() dataSource: CustomAsyncDataSource<any>;\r\n  @Input() displayedColumns: CustomAsyncDataSource<any>;\r\n  public numberOfResults: number = 0;\r\n  public sort: any;\r\n  @ViewChild(MatTable, { static: true }) table: MatTable<any>;\r\n  @ContentChildren(MatColumnDef) columnDefs: QueryList<MatColumnDef>;\r\n  @ViewChild(MatSort) set content(content: ElementRef) {\r\n    this.sort = content;\r\n    if (this.sort) {\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource.numberOfResults$.subscribe(\r\n      (nb) => (this.numberOfResults = nb)\r\n    );\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.columnDefs.forEach((columnDef) => this.table.addColumnDef(columnDef));\r\n  }\r\n}\r\n","<div\r\n  class=\"table-wrapper\"\r\n  [ngClass]=\"{\r\n    'hidden-from-view': !numberOfResults,\r\n    loading: dataSource.loading$ | async\r\n  }\"\r\n>\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n    <ng-content></ng-content>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n</div>\r\n","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { cloneDeep, isEqual } from 'lodash';\r\nimport { of } from 'rxjs';\r\nimport {\r\n  FLUID_TYPE_LABELS,\r\n  NETWORK_SENSITIVITY_LABELS,\r\n  NETWORK_LOCATION_LABELS,\r\n  PrivateNetworkDto,\r\n} from 'src/app/model/privateNetworkDto';\r\nimport { PrivateNetworksService } from '../private-networks.service';\r\n\r\n@Component({\r\n  selector: 'app-private-network-form',\r\n  templateUrl: './private-network-form.component.html',\r\n  styleUrls: ['./private-network-form.component.scss'],\r\n})\r\nexport class PrivateNetworkFormComponent implements OnInit {\r\n  public form: FormGroup;\r\n  public isUpdateOngoing: boolean = false;\r\n  public wasFormModified: boolean = false;\r\n  public originalObject: any;\r\n  public updated: EventEmitter<void> = new EventEmitter();\r\n  public fluidTypeLabels = Object.entries(FLUID_TYPE_LABELS);\r\n  public networkSensitivityLabels = Object.entries(NETWORK_SENSITIVITY_LABELS);\r\n  public networkLocationLabels = Object.entries(NETWORK_LOCATION_LABELS);\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PrivateNetworkFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: {\r\n      isCreation: boolean;\r\n      privateNetwork: PrivateNetworkDto;\r\n    },\r\n    public privateNetworksService: PrivateNetworksService,\r\n    fb: FormBuilder\r\n  ) {\r\n    this.form = fb.group({\r\n      name: ['', [Validators.required]],\r\n      fluidType: ['PUBLIC', [Validators.required]],\r\n      networkSensitivity: ['NOT_SENSITIVE', [Validators.required]],\r\n      code: ['', [Validators.pattern('[0-9]*')]],\r\n      description: [''],\r\n      enabled: true,\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dialogRef.disableClose = true;\r\n\r\n    if (!this.data.isCreation) {\r\n      this.form.patchValue(this.data.privateNetwork);\r\n      this.originalObject = cloneDeep(this.form.value);\r\n    }\r\n\r\n    this.form.valueChanges.subscribe((val) => {\r\n      this.wasFormModified = !isEqual(this.originalObject, this.form.value);\r\n    });\r\n  }\r\n\r\n  public onCancelClick() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  public async onValidateClick() {\r\n    this.isUpdateOngoing = true;\r\n\r\n    const callWrapper = this.data.isCreation\r\n      ? await this.privateNetworksService.postPrivateNetwork(this.form.value)\r\n      : await this.privateNetworksService.putPrivateNetwork(\r\n          this.data.privateNetwork.privateNetworkId,\r\n          this.form.value\r\n        );\r\n    if (!callWrapper.error) {\r\n      this.updated.emit();\r\n\r\n      this.dialogRef.close();\r\n    }\r\n    this.isUpdateOngoing = false;\r\n  }\r\n}\r\n","<div class=\"private-network-dialog\">\r\n  <app-edition-wrapper\r\n    [title]=\"(data.isCreation ? 'Créer' : 'Modifier') + ' un réseau'\"\r\n    [isUpdateOngoing]=\"isUpdateOngoing\"\r\n    [isConfirmDisabled]=\"!form.valid || !wasFormModified\"\r\n    [confirmText]=\"data.isCreation ? 'Créer' : 'Modifier'\"\r\n    [wasFormModified]=\"wasFormModified\"\r\n    (cancel)=\"onCancelClick()\"\r\n    (confirm)=\"onValidateClick()\"\r\n  >\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"private-network-status\" *ngIf=\"!data.isCreation\">\r\n        <mat-slide-toggle formControlName=\"enabled\">{{\r\n          form.get(\"enabled\").value ? \"Active\" : \"Désactivée\"\r\n        }}</mat-slide-toggle>\r\n      </div>\r\n\r\n      <div class=\"field-wrapper\">\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Nom du réseau</mat-label>\r\n          <input\r\n            id=\"name\"\r\n            cdkFocusInitial\r\n            autocomplete=\"off\"\r\n            matInput\r\n            formControlName=\"name\"\r\n            maxlength=\"20\"\r\n          />\r\n          <mat-hint align=\"end\"\r\n            >{{ (this.form.value.name || []).length }}/20</mat-hint\r\n          >\r\n          <mat-error *ngIf=\"form.get('name').errors?.['forbiddenValue']\"\r\n            >Ce nom est déjà associé à un autre réseau</mat-error\r\n          >\r\n        </mat-form-field>\r\n        <div class=\"error-hint\"></div>\r\n      </div>\r\n\r\n      <div class=\"field-wrapper\">\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Type de réseau</mat-label>\r\n          <mat-select\r\n            placeholder=\"Choisissez un type de fluide\"\r\n            formControlName=\"fluidType\"\r\n          >\r\n            <mat-option\r\n              *ngFor=\"let entry of fluidTypeLabels\"\r\n              [value]=\"entry[0]\"\r\n              >{{ entry[1] }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"field-wrapper\">\r\n        <!--   <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Sensibilité du réseau</mat-label> -->\r\n        <!--    <mat-select\r\n            placeholder=\"Choisissez une sensibility\"\r\n            formControlName=\"networkSensitivity\"\r\n          >\r\n            <mat-option\r\n              *ngFor=\"let entry of networkSensitivityLabels\"\r\n              [value]=\"entry[0]\"\r\n              >{{ entry[1] }}</mat-option\r\n            >\r\n          </mat-select> -->\r\n\r\n        <mat-radio-group\r\n          formControlName=\"networkSensitivity\"\r\n          aria-label=\"Select an option\"\r\n        >\r\n          <mat-radio-button\r\n            *ngFor=\"let entry of networkSensitivityLabels\"\r\n            [value]=\"entry[0]\"\r\n            >{{ entry[1] }}</mat-radio-button\r\n          >\r\n        </mat-radio-group>\r\n        <!--    </mat-form-field> -->\r\n      </div>\r\n\r\n      <div class=\"field-wrapper\">\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Code</mat-label>\r\n          <input\r\n            id=\"name\"\r\n            autocomplete=\"off\"\r\n            matInput\r\n            formControlName=\"code\"\r\n            maxlength=\"20\"\r\n          />\r\n          <mat-hint align=\"end\"\r\n            >{{ (this.form.value.code || []).length }}/20</mat-hint\r\n          >\r\n          <mat-error *ngIf=\"form.get('code').errors?.['pattern']\"\r\n            >Seuls les caractères numériques sont acceptés pour ce\r\n            champ</mat-error\r\n          >\r\n        </mat-form-field>\r\n        <div class=\"error-hint\"></div>\r\n      </div>\r\n\r\n      <div class=\"field-wrapper\">\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Description</mat-label>\r\n          <textarea\r\n            #technicalInformations\r\n            autocomplete=\"off\"\r\n            cdkAutosizeMinRows=\"4\"\r\n            cdkTextareaAutosize\r\n            formControlName=\"description\"\r\n            matInput\r\n            maxlength=\"100\"\r\n            name=\"description\"\r\n            placeholder=\"\"\r\n          ></textarea>\r\n          <mat-hint align=\"end\"\r\n            >{{ (this.form.value.description || []).length }}/100</mat-hint\r\n          >\r\n          <mat-error *ngIf=\"form.get('code').errors?.['forbiddenValue']\"\r\n            >Ce nom est déjà associé à un autre réseau</mat-error\r\n          >\r\n        </mat-form-field>\r\n        <div class=\"error-hint\"></div>\r\n      </div>\r\n    </form>\r\n  </app-edition-wrapper>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ApiErrorDisplay } from 'src/app/model/models';\r\nimport {\r\n  PrivateNetworkDto,\r\n  FLUID_TYPE_LABELS,\r\n  NETWORK_SENSITIVITY_LABELS,\r\n  NETWORK_LOCATION_LABELS,\r\n} from 'src/app/model/privateNetworkDto';\r\nimport { PrivateNetworksService } from './private-networks.service';\r\nimport { ToasterService } from 'src/app/services/toaster.service';\r\nimport { PrivateNetworkFormComponent } from './private-network-form/private-network-form.component';\r\nimport { CustomAsyncDataSource } from 'src/app/API/mock/CustomAsyncDataSource';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-private-networks',\r\n  templateUrl: './private-networks.component.html',\r\n  styleUrls: ['./private-networks.component.scss'],\r\n})\r\nexport class PrivateNetworksComponent implements OnInit, AfterViewInit {\r\n  public errorDisplay: ApiErrorDisplay;\r\n  public searchText: string = '';\r\n  public displayedColumns = [\r\n    'name',\r\n    'fluidType',\r\n    'networkSensitivity',\r\n    'code',\r\n    'description',\r\n  ];\r\n  public dataSource: CustomAsyncDataSource<PrivateNetworkDto>;\r\n  public isEnabledTab: boolean = true;\r\n  public fluidTypeLabels = FLUID_TYPE_LABELS;\r\n  public networkSensitivityLabels = NETWORK_SENSITIVITY_LABELS;\r\n  public networkLocationLabels = NETWORK_LOCATION_LABELS;\r\n  public numberOfResults: number = 0;\r\n\r\n  public onFirefox: boolean = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  private clearSort() {\r\n    if (!this.sort) {\r\n      return;\r\n    }\r\n    this.sort.sort({\r\n      id: '',\r\n      start: '',\r\n      disableClear: false,\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    public privateNetworkservice: PrivateNetworksService,\r\n    public toasterService: ToasterService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  detectBrowserName() {\r\n    const agent = window.navigator.userAgent.toLowerCase();\r\n    switch (true) {\r\n      case agent.indexOf('edge') > -1:\r\n        return 'edge';\r\n      case agent.indexOf('opr') > -1 && !!(<any>window).opr:\r\n        return 'opera';\r\n      case agent.indexOf('chrome') > -1 && !!(<any>window).chrome:\r\n        return 'chrome';\r\n      case agent.indexOf('trident') > -1:\r\n        return 'ie';\r\n      case agent.indexOf('firefox') > -1:\r\n        return 'firefox';\r\n      case agent.indexOf('safari') > -1:\r\n        return 'safari';\r\n      default:\r\n        return 'other';\r\n    }\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.onFirefox = this.detectBrowserName() == 'firefox';\r\n    this.dataSource = new CustomAsyncDataSource<PrivateNetworkDto>(\r\n      (query, enabled, pageIndex = 0, pageSize = 200) =>\r\n        this.privateNetworkservice.getPrivateNetworks(\r\n          query,\r\n          enabled,\r\n          pageIndex,\r\n          pageSize\r\n        )\r\n    );\r\n    this.refreshPrivateNetworks();\r\n\r\n    this.dataSource.numberOfResults$.subscribe(\r\n      (nb) => (this.numberOfResults = nb)\r\n    );\r\n\r\n    this.dataSource.errorDisplay$.subscribe((val) => (this.errorDisplay = val));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.paginator.page.pipe(tap(() => this.loadElms())).subscribe();\r\n  }\r\n\r\n  loadElms() {\r\n    this.dataSource.load(\r\n      this.searchText,\r\n      this.isEnabledTab,\r\n      this.paginator.pageIndex,\r\n      this.paginator.pageSize\r\n    );\r\n  }\r\n\r\n  public async refreshPrivateNetworks() {\r\n    if (this.paginator) {\r\n      this.paginator.pageIndex = 0;\r\n    }\r\n    this.dataSource.load(\r\n      this.searchText,\r\n      this.isEnabledTab,\r\n      0,\r\n      this.paginator?.pageSize || 200\r\n    );\r\n    this.clearSort();\r\n  }\r\n\r\n  public openEditionDialog(elm?: PrivateNetworkDto) {\r\n    this.dialog\r\n      .open(PrivateNetworkFormComponent, {\r\n        data: {\r\n          isCreation: !elm,\r\n          privateNetwork: elm,\r\n          otherPrivateNetworkNames: [],\r\n          // this.privateNetworks\r\n          //   .map((lp) => lp.name)\r\n          //   .filter((code) => code !== elm?.name),\r\n        },\r\n      })\r\n      .componentInstance.updated.subscribe(() => {\r\n        this.toasterService.showToaster(\r\n          'success',\r\n          `Le réseau a été ${!elm ? 'créé' : 'modifié'}`\r\n        );\r\n        this.refreshPrivateNetworks();\r\n      });\r\n  }\r\n\r\n  public setIsEnabledTab(val: boolean) {\r\n    this.isEnabledTab = val;\r\n    this.refreshPrivateNetworks();\r\n  }\r\n\r\n  public doSort(e) {\r\n    // bug tri sur description ne marche pas\r\n    if (e.active === 'description') {\r\n      return;\r\n    }\r\n\r\n    //tri sur le nom par défaut\r\n    if (!e.direction) {\r\n      e = { active: 'name', direction: 'asc' };\r\n    }\r\n\r\n    const current = this.dataSource.elementsSubject.value;\r\n    this.sortOnProp(current, e.active, e.direction);\r\n    this.dataSource.elementsSubject.next(current);\r\n  }\r\n\r\n  sortOnProp(elsToSort: any[], attrName: string, direction: 'desc' | 'asc') {\r\n    const dir = direction === 'asc' ? 1 : -1;\r\n    elsToSort.sort(function (a, b) {\r\n      if (a[attrName] < b[attrName]) {\r\n        return dir * -1;\r\n      }\r\n      if (a[attrName] > b[attrName]) {\r\n        return dir;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"onFirefox\">Ce navigateur n'est pas supporté</div>\r\n\r\n<div class=\"private-networks\" [ngClass]=\"onFirefox ? 'hidden-from-view' : ''\">\r\n  <div class=\"page-header\">\r\n    <div class=\"page-header__info\">\r\n      <div>\r\n        <div class=\"page-header__title\">Référentiel des réseaux</div>\r\n        <div class=\"page-header__subtitle\">Voir et gérer tous les réseaux</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"page-header__actions\">\r\n      <button\r\n        mat-flat-button\r\n        color=\"primary\"\r\n        class=\"btn-md\"\r\n        (click)=\"openEditionDialog()\"\r\n      >\r\n        <div class=\"add-icon gdd-icon gdd-icon__add\"></div>\r\n        Ajouter un réseau\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <nav mat-tab-nav-bar>\r\n  <a matTabLink (click)=\"setIsEnabledTab(true)\" [active]=\"isEnabledTab\">\r\n    Actifs\r\n  </a>\r\n  <a matTabLink (click)=\"setIsEnabledTab(false)\" [active]=\"!isEnabledTab\">\r\n    Désactivés\r\n  </a>\r\n</nav> -->\r\n\r\n  <div class=\"tab-content\">\r\n    <!--  <div class=\"field-wrapper search-field\" *ngIf=\"!errorDisplay\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Rechercher par nom</mat-label>\r\n        <input\r\n          autocomplete=\"off\"\r\n          matInput\r\n          [(ngModel)]=\"searchText\"\r\n          (ngModelChange)=\"refreshPrivateNetworks()\"\r\n        />\r\n        <span matSuffix class=\"gdd-icon gdd-icon__search\"></span>\r\n      </mat-form-field>\r\n    </div> -->\r\n\r\n    <h4 *ngIf=\"!!numberOfResults\">Liste des réseaux</h4>\r\n\r\n    <app-async-table\r\n      [dataSource]=\"dataSource\"\r\n      [displayedColumns]=\"displayedColumns\"\r\n      matSort\r\n      (matSortChange)=\"doSort($event)\"\r\n    >\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>Nom du réseau</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"fluidType\">\r\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>Type</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ fluidTypeLabels[element.fluidType] }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"networkSensitivity\">\r\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>Sensibilite</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ networkSensitivityLabels[element.networkSensitivity] }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"code\">\r\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>Code</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.code || \"-\" }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>Description</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.description || \"-\" }}\r\n        </td>\r\n      </ng-container>\r\n    </app-async-table>\r\n    <mat-paginator\r\n      [ngClass]=\"{ 'hidden-from-view': true }\"\r\n      [length]=\"numberOfResults\"\r\n      [pageSizeOptions]=\"[20, 50, 100]\"\r\n      showFirstLastButtons\r\n    ></mat-paginator>\r\n    <app-empty-state\r\n      *ngIf=\"\r\n        !errorDisplay && !numberOfResults && !(dataSource.loading$ | async)\r\n      \"\r\n      illustrationType=\"documents\"\r\n      >Aucun réseau</app-empty-state\r\n    >\r\n  </div>\r\n\r\n  <app-error-state\r\n    *ngIf=\"!!errorDisplay\"\r\n    [retryPossible]=\"!!errorDisplay.retryable\"\r\n    [retryOngoing]=\"dataSource.loading$ | async\"\r\n    (btnClicked)=\"refreshLandPlots()\"\r\n  >\r\n    Impossible de récupérer les réseaux privés.<br />{{ errorDisplay.message }}\r\n  </app-error-state>\r\n  <esn-loader\r\n    [centered]=\"true\"\r\n    *ngIf=\"(dataSource.loading$ | async) && !numberOfResults && !errorDisplay\"\r\n  ></esn-loader>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { ReferentialAPIService } from 'src/app/API/mock/referentialAPI.service';\r\nimport { ApiCallWrapperService } from 'src/app/services/api-call-wrapper.service';\r\nimport { ApiCallWrapper } from 'src/app/model/apiCallWrapper';\r\nimport { PrivateNetworkDto } from 'src/app/model/privateNetworkDto';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PrivateNetworksService {\r\n  constructor(\r\n    public referentialApi: ReferentialAPIService,\r\n    public callWrapper: ApiCallWrapperService\r\n  ) {}\r\n\r\n  public async getPrivateNetworks(\r\n    query?: string,\r\n    enabled?: boolean,\r\n    pageIndex = 0,\r\n    pageSize = 200\r\n  ): Promise<ApiCallWrapper> {\r\n    return this.callWrapper.makeApiCall(\r\n      this.referentialApi.fetchPrivateNetworkUsingGET(\r\n        query,\r\n        enabled,\r\n        pageIndex,\r\n        pageSize\r\n      ),\r\n      'récupération des réseaux'\r\n    );\r\n  }\r\n\r\n  public async postPrivateNetwork(\r\n    privateNetwork: PrivateNetworkDto\r\n  ): Promise<ApiCallWrapper> {\r\n    return this.callWrapper.makeApiCall(\r\n      this.referentialApi.createPrivateNetworkUsingPOST(privateNetwork),\r\n      'création du réseau',\r\n      true\r\n    );\r\n  }\r\n\r\n  public async putPrivateNetwork(\r\n    id: string,\r\n    privateNetwork: PrivateNetworkDto\r\n  ): Promise<ApiCallWrapper> {\r\n    privateNetwork.privateNetworkId = id;\r\n    return this.callWrapper.makeApiCall(of(), 'modification du réseau', true);\r\n  }\r\n\r\n  public privateNetworkWithNameDoesntExists(name: string): Observable<boolean> {\r\n    return of(true);\r\n    /* return this.referentialApi.privateNetworkExists(name).pipe(\r\n      map((resp) => !resp.content),\r\n      catchError((err) => {\r\n        return of(true);\r\n      })\r\n    ); */\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { ApiUtils } from '../utils/apiUtils';\r\nimport { ApiCallWrapper } from '../model/apiCallWrapper';\r\nimport { ToasterService } from './toaster.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApiCallWrapperService {\r\n  constructor(public toasterService: ToasterService) {}\r\n\r\n  public async makeApiCall(\r\n    apiCall: Observable<any>,\r\n    callLabel: string,\r\n    showNotification: boolean = false\r\n  ): Promise<ApiCallWrapper> {\r\n    return new Promise((resolve) => {\r\n      apiCall\r\n        .pipe(\r\n          catchError((err) => {\r\n            console.log({ err });\r\n            const error = ApiUtils.getErrorMessage(err, callLabel);\r\n            if (showNotification) {\r\n              this.toasterService.showToaster(\r\n                'error',\r\n                /* `Erreur lors de l${\r\n                  ['a', 'e', 'i', 'o', 'u', 'y'].includes(callLabel.charAt(0))\r\n                    ? \"'\"\r\n                    : 'a '\r\n                }${callLabel}`, */\r\n                'Erreur 500',\r\n                error.message,\r\n                { disableTimeOut: true }\r\n              );\r\n            }\r\n            resolve({\r\n              error,\r\n            });\r\n            throw err;\r\n          })\r\n        )\r\n        .subscribe((resp) => {\r\n          resolve({ resp: resp?.content });\r\n        });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActiveToast, IndividualConfig, ToastrService } from 'ngx-toastr';\r\n\r\nconst INFO_TOASTER_CONFIG: Partial<IndividualConfig> = {\r\n  timeOut: 2500,\r\n  enableHtml: true,\r\n};\r\n\r\nconst ERROR_TOASTER_CONFIG: Partial<IndividualConfig> = {\r\n  disableTimeOut: true,\r\n  enableHtml: true,\r\n  closeButton: true,\r\n};\r\nconst SUCCESS_TOASTER_CONFIG: Partial<IndividualConfig> = INFO_TOASTER_CONFIG;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ToasterService {\r\n  constructor(private toasterService: ToastrService) {}\r\n\r\n  public showToaster(\r\n    type: 'info' | 'error' | 'success',\r\n    title?: string,\r\n    message?: string,\r\n    config?: Partial<IndividualConfig>\r\n  ): ActiveToast<any> | void {\r\n    switch (type) {\r\n      case 'info':\r\n        return this.toasterService.info(message, title, {\r\n          ...INFO_TOASTER_CONFIG,\r\n          ...config,\r\n        });\r\n      case 'error':\r\n        return this.toasterService.error(message, title, {\r\n          ...ERROR_TOASTER_CONFIG,\r\n          ...config,\r\n        });\r\n      case 'success':\r\n        return this.toasterService.success(message, title, {\r\n          ...INFO_TOASTER_CONFIG,\r\n          ...config,\r\n        });\r\n      default:\r\n        throw 'This toaster type is not implemented yet';\r\n    }\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { GddUtils } from './gddUtils';\r\nimport { ApiErrorDisplay } from '../model/models';\r\nimport { GddWebappEventSeverity, CreateEventOptions } from '../model/event';\r\n\r\nexport class ApiUtils {\r\n  static async retry(\r\n    func: Function,\r\n    condition: Function = () => true,\r\n    stepName: string = '',\r\n    bodySent: any = 'Unavailable',\r\n    retries: number = 2,\r\n    interval: number = 5000\r\n  ) {\r\n    const stepNamePrecision = stepName ? ' for ' + stepName : '';\r\n    let count = 0;\r\n    let resp;\r\n    let error;\r\n    while (count < retries) {\r\n      try {\r\n        resp = await func();\r\n        if (condition(resp)) {\r\n          return resp;\r\n        } else {\r\n          console.log(\r\n            `Call number ${\r\n              count + 1\r\n            } failed${stepNamePrecision}: Condition unfullfilled`\r\n          );\r\n          console.log(resp);\r\n        }\r\n      } catch (err) {\r\n        error = err;\r\n        console.log(\r\n          `Call number ${\r\n            count + 1\r\n          } failed${stepNamePrecision} with following error:`\r\n        );\r\n        console.log(err);\r\n      }\r\n      count++;\r\n      await GddUtils.sleep(interval);\r\n    }\r\n\r\n    console.log(\r\n      `Call failed ${stepNamePrecision} after ${retries} retries. Stopping Synchro:`\r\n    );\r\n    throw {\r\n      message: `Api call error: Call failed${stepNamePrecision}`,\r\n      responseReceived: resp,\r\n      error,\r\n      bodySent,\r\n    };\r\n  }\r\n\r\n  static getErrorMessage(error: any, errorType: string = ''): ApiErrorDisplay {\r\n    const ofErrorTypeWording = `${\r\n      ['a', 'e', 'i', 'o', 'u', 'y'].includes(errorType.charAt(0))\r\n        ? `d'`\r\n        : 'de '\r\n    }${errorType}`;\r\n    if (!navigator.onLine) {\r\n      return {\r\n        message: `Merci de vérifier votre connexion et réessayer.`,\r\n        retryable: true,\r\n      };\r\n    }\r\n    const status = error?.status || error?.error?.status;\r\n    if (!status) {\r\n      return {\r\n        message: `Une erreur technique s'est produite, merci de contacter le support.`,\r\n      };\r\n    }\r\n    switch (status) {\r\n      case 400:\r\n        return {\r\n          code: 400,\r\n          message: `Requête rejetée par le serveur, merci de contacter le support.`,\r\n        };\r\n      case 401:\r\n        return {\r\n          code: 401,\r\n          message: `Votre authentification Gardian a expiré, merci de vous reconnecter.`,\r\n        };\r\n      case 403:\r\n        return {\r\n          code: 403,\r\n          message: `L'accès à cette ressource n'est pas autorisé. Merci de contacter le support.`,\r\n        };\r\n      // case 409:\r\n      //   return `Erreur ${ofErrorTypeWording}, conflit détecté.`;\r\n      case 500:\r\n        return {\r\n          code: 500,\r\n          message: `Une erreur non gérée s'est produite, merci de contacter le support.`,\r\n        };\r\n      case 503:\r\n        return {\r\n          code: 503,\r\n          message: `Le service est temporairement indisponible, merci de réessayer ultérieurement.`,\r\n          retryable: true,\r\n        };\r\n      default:\r\n        return {\r\n          message: `Une erreur technique s'est produite, merci de contacter le support.`,\r\n          code: status,\r\n        };\r\n    }\r\n  }\r\n\r\n  static handleOffLineAndUnauthentifiedEventOptions(\r\n    error: any\r\n  ): CreateEventOptions {\r\n    const options: CreateEventOptions = {\r\n      error,\r\n      severity:\r\n        !navigator.onLine || (error && error.status === 401)\r\n          ? GddWebappEventSeverity.DEBUG\r\n          : undefined,\r\n    };\r\n\r\n    if (!navigator.onLine) {\r\n      options.titleAppend = ' (Offline)';\r\n    } else if (error && error.status === 401) {\r\n      options.titleAppend = ' (Non authentifié)';\r\n    } else if (\r\n      error &&\r\n      error.status === 200 &&\r\n      error.message.startsWith('Http failure during parsing')\r\n    ) {\r\n      options.titleAppend = ' (Erreur FHM)';\r\n      options.severity = GddWebappEventSeverity.FATAL;\r\n    }\r\n    return options;\r\n  }\r\n}\r\n","import * as Bowser from 'bowser';\r\nimport * as _ from 'lodash';\r\nexport class GddUtils {\r\n  static sleep(ms: number) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  static generateRandomUuid(): string {\r\n    let s4 = () => {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    };\r\n    return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\r\n  }\r\n\r\n  static isBrowserSupported(): boolean {\r\n    const browser = Bowser.getParser(window.navigator.userAgent);\r\n\r\n    const isValidBrowser = Boolean(\r\n      browser.satisfies({\r\n        chrome: '>1',\r\n        firefox: '>1',\r\n        'Microsoft Edge': '>=79',\r\n      })\r\n    );\r\n\r\n    const browserCapabilitiesOK =\r\n      'reversed' in document.createElement('ol') && // Edge before chromium\r\n      'querySelector' in document &&\r\n      'localStorage' in window &&\r\n      'addEventListener' in window &&\r\n      'IntersectionObserver' in window &&\r\n      'indexedDB' in window &&\r\n      'serviceWorker' in navigator &&\r\n      'databases' in indexedDB;\r\n    return isValidBrowser && browserCapabilitiesOK;\r\n  }\r\n\r\n  static pruneEmpty(obj: any) {\r\n    return (function prune(current) {\r\n      _.forOwn(current, function (value, key) {\r\n        if (\r\n          _.isUndefined(value) ||\r\n          _.isNull(value) ||\r\n          _.isNaN(value) ||\r\n          (_.isString(value) && _.isEmpty(value)) ||\r\n          (_.isObject(value) && _.isEmpty(prune(value)))\r\n        ) {\r\n          delete current[key];\r\n        }\r\n      });\r\n      // remove any leftover undefined values from the delete\r\n      // operation on an array\r\n      if (_.isArray(current)) _.pull(current, undefined);\r\n\r\n      return current;\r\n    })(_.cloneDeep(obj)); // Do not modify the original object, create a clone instead\r\n  }\r\n\r\n  //https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\r\n  static hashCode = function (str: string) {\r\n    var hash = 0,\r\n      i,\r\n      chr;\r\n    if (str.length === 0) return hash;\r\n    for (i = 0; i < str.length; i++) {\r\n      chr = str.charCodeAt(i);\r\n      hash = (hash << 5) - hash + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n  };\r\n}\r\n","export const environment = {\n  production: true\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}